services:
  backend_devel:
    build:
      context: .
      dockerfile: backend.Dockerfile
    # wait until the db is ready
    depends_on:
      db_devel:
        condition: service_healthy
    env_file:
    - .env
    environment:
    - DB_HOST=db_devel
    volumes:
      - "./backend/:/app"
  frontend_devel:
    build:
      context: .
      dockerfile: frontend-development.Dockerfile
    ports:
    - "3000:3000"
    # wait until db is ready
    depends_on:
      db_devel:
        condition: service_healthy
    environment:
      - WATCHPACK_POLLING=true # enable browser live reload
    volumes:
      - "./frontend/:/app"
  db_devel:
    image: postgres:latest
    restart: always
    container_name: db_devel
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data_devel:/var/lib/postgresql/data
    # check whether the db is ready or not
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME} -p ${DB_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  postgres_data_devel: