services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: react-flask-app-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - APP_SECRET=${APP_SECRET}
  client:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: react-flask-app-client
    ports:
      - "${APP_PORT}:80"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:latest
    restart: unless-stopped
    container_name: db
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME} -p ${DB_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  postgres_data: